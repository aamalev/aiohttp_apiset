name: Tests

on:
  push:
    branches:
      - master
    tags: [ '*' ]
  pull_request:
    branches:
      - master
      - 0.9.X

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          pip install -U pip setuptools
          pip install -U pipenv isort mypy flake8 flake8-print
          echo "__version__ = 'tests'" > aiohttp_apiset/version.py
          pip install -e .
          pipenv install --dev --skip-lock --system
      - name: isort
        run: |
          isort -c aiohttp_apiset tests
      - name: flake8
        run: |
          flake8 aiohttp_apiset tests
      - name: mypy
        run: |
          mypy aiohttp_apiset tests

  tests:
    runs-on: ${{ matrix.os }}
    env:
      FAKE_UI: 'yes'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', 'pypy-3.9']
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -U pip setuptools
        pip install -U pipenv
        echo "__version__ = 'tests'" > aiohttp_apiset/version.py
        pip install -e .
        pipenv install --dev --skip-lock --system
    - name: pytest
      run: |
        pytest --cov=aiohttp_apiset --cov-report=xml
    - name: Upload coverage to Codecov
      if: ${{ matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest' }}
      uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
