name: Tests

on: [push]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python:
          - version: 3.6
            file: python3.6
            requirements: aiohttp
        include:
          - os: ubuntu-latest
            python:
              version: 3.5
              file: python3.5
              requirements: aiohttp
          - os: ubuntu-latest
            python:
              version: 3.6
              file: python3.6
              requirements: aiohttp==3.7.2
          - os: ubuntu-latest
            python:
              version: 3.7
              file: python3.7
              requirements: aiohttp
          - os: ubuntu-latest
            python:
              version: 3.8
              file: python3.8
              requirements: aiohttp
          - os: ubuntu-latest
            python:
              version: 3.9
              file: python3.9
              requirements: aiohttp
          - os: ubuntu-latest
            python:
              version: pypy3
              file: pypy3
              requirements: aiohttp
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python.version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python.version }}
    - name: Install dependencies
      run: |
        pip install --user pip setuptools
        pip install --user pipenv
        python -m pipenv --python ${{ matrix.python.file }}
        python -m pipenv run pip install -U pip setuptools codecov
        echo "__version__ = 'tests'" > aiohttp_apiset/version.py
        python -m pipenv run pip install -e .[dev]
        python -m pipenv run pip install ${{ matrix.python.requirements }}
    - name: Test with pytest
      run: |
        python -m pipenv run pytest --cov=aiohttp_apiset --cov-report=xml
    - name: Upload coverage to Codecov
      if: ${{ matrix.python.version == '3.5' && matrix.os == 'ubuntu-latest' }}
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
