[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aiohttp-apiset"
dynamic = ["version"]
description = "Build routes using swagger specification"
readme = "README.rst"
license = "Apache-2.0"
requires-python = ">=3.9"
authors = [
    { name = "Alexander Malev", email = "malev@somedev.ru" },
]
keywords = [
    "aiohttp",
    "apiset",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Internet :: WWW/HTTP",
]
dependencies = [
    "aiohttp>=3,<4",
    "jsonschema",
    "pyyaml",
]
[project.optional-dependencies]
jinja2 = [
    "aiohttp-jinja2",
]
dev-test = [
    "pytest",
    "pytest-aiohttp<1",
    "pytest-cov",
    "pytest-mock",
]
docs = [
    "sphinx >= 1.4.8",
    "sphinx_rtd_theme",
]
dev-lint = [
    "ruff==0.0.270",
    "isort==5.12.0",
    "black==23.3.0",
    "mypy==1.3.0",
    "types-jsonschema",
    "types-PyYAML",
]

[project.urls]
Homepage = "https://github.com/aamalev/aiohttp_apiset/"
Documentation = "http://aiohttp-apiset.readthedocs.io/en/latest/?badge=latest"
Issues = "https://github.com/aamalev/aiohttp-apiset/issues"
Source = "https://github.com/aamalev/aiohttp-apiset"

[tool.hatch.version]
path = "aiohttp_apiset/__init__.py"

[tool.hatch.build]
include = [
    "/aiohttp_apiset",
]

[tool.hatch.envs.default]
features = [
    "dev-test",
    "jinja2",
]
[tool.hatch.envs.default.scripts]
cov = [
    "coverage run -m pytest",
    "coverage report",
]

[[tool.hatch.envs.all.matrix]]
python = [
    "3.9",
    "3.10",
    "3.11",
    "3.12",
    "3.13",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [
    "aiohttp_apiset",
    "tests",
]
addopts = [
    "-vs",
    "--doctest-modules",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
branch = true
parallel = false
source = [
    "aiohttp_apiset",
    "tests",
]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 79
skip-string-normalization = true
target-version = [
    "py39",
    "py310",
    "py311",
    "py312",
    "py313",
]

[tool.isort]
#profile = "black"
multi_line_output = 3
force_single_line = false
include_trailing_comma = true
lines_after_imports = 2

[tool.mypy]
follow_imports = "silent"
no_implicit_optional = false
warn_redundant_casts = true
#check_untyped_defs = true
[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "pytest",
    "aiohttp_jinja2",
]

[tool.ruff]
line-length = 79

[tool.hatch.envs.lint]
python = "3.9"
features = [
    "dev-lint",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:aiohttp_apiset tests}"
style = [
    "ruff {args:aiohttp_apiset tests}",
    "isort --check-only --diff {args:aiohttp_apiset tests}",
#    "black --check --diff {args:aiohttp_apiset tests}",
]
fmt = [
    "ruff --fix {args:aiohttp_apiset tests}",
    "isort {args:aiohttp_apiset tests}",
#    "black {args:aiohttp_apiset tests}",
    "style",
]
all = [
    "style",
    "typing",
]
